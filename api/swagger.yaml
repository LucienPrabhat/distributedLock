---
swagger: "2.0"
info:
  description: "distributed lock"
  version: "1.0.0"
  title: "distributed lock API"
host: "localhost:8080"
basePath: "/v1"
schemes:
- "http"
paths:
  /semaphore/{semaKey}:
    get:
      summary: "Query semaphore seat"
      operationId: "querySema"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/semaphoreLock"
        400:
          description: "invaild request"
        404:
          description: "semaphore not exist"
      x-swagger-router-controller: "Default"
    put:
      summary: "Create semaphore Lock"
      operationId: "createSema"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "semaLockargs"
        description: "define semaphore seats"
        required: true
        schema:
          $ref: "#/definitions/semaLockargs"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/semaphoreLock"
        400:
          description: "invaild request"
        409:
          description: "semaphore has been used"
      x-swagger-router-controller: "Default"
    delete:
      summary: "Delete semaphore Lock"
      operationId: "deleteSema"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invaild request"
        401:
          description: "invaild request"
      x-swagger-router-controller: "Default"
  /semaphore/{semaKey}/Seat:
    put:
      summary: "Acquire(+1) seat from semaphore"
      operationId: "aquireSeat"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "semaSeatttl"
        description: "expiry"
        required: true
        schema:
          $ref: "#/definitions/semaSeatttl"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/semaphoreSeat"
        400:
          description: "invaild request"
        409:
          description: "out of space"
        404:
          description: "semaphore not cteate"
      x-swagger-router-controller: "Default"
    delete:
      summary: "Release(-1) space from semaphore"
      operationId: "releaseSeat"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "SemaHandle"
        description: "Semaphore Seat handle(uuid)"
        required: true
        schema:
          $ref: "#/definitions/semaSeathandle"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invaild request"
        401:
          description: "invaild request"
      x-swagger-router-controller: "Default"
    patch:
      summary: "Update seat expiry(ttl)"
      operationId: "postponeSeat"
      produces:
      - "application/json"
      parameters:
      - name: "semaKey"
        in: "path"
        description: "Semaphore id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "semaSeatArgs"
        description: "Semaphore seat args"
        required: true
        schema:
          $ref: "#/definitions/semaSeatargs"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/semaphoreSeat"
        400:
          description: "invaild request"
        401:
          description: "incorrect data"
      x-swagger-router-controller: "Default"
  /mutex/{mutexKey}:
    get:
      summary: "Query mutex status"
      operationId: "queryMutex"
      produces:
      - "application/json"
      parameters:
      - name: "mutexKey"
        in: "path"
        description: "Mutex id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/mutex"
        400:
          description: "invaild request"
        404:
          description: "mutex not exist"
      x-swagger-router-controller: "Default"
    put:
      summary: "Mutex lock"
      operationId: "lockMutex"
      produces:
      - "application/json"
      parameters:
      - name: "mutexKey"
        in: "path"
        description: "Mutex id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "mutexttl"
        required: true
        schema:
          $ref: "#/definitions/mutexttl"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/mutex"
        400:
          description: "invaild request"
        409:
          description: "ID has been uesd"
      x-swagger-router-controller: "Default"
    delete:
      summary: "Delete a Mutex(Unlock)"
      operationId: "unlockMutex"
      produces:
      - "application/json"
      parameters:
      - name: "mutexKey"
        in: "path"
        description: "Mutex id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "mutexHandle"
        description: "Mutex handle(uuid)"
        required: true
        schema:
          $ref: "#/definitions/mutexHandle"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invaild request"
        401:
          description: "invaild request"
      x-swagger-router-controller: "Default"
    patch:
      summary: "Update mutex expiry(ttl)"
      operationId: "extendMutex"
      produces:
      - "application/json"
      parameters:
      - name: "mutexKey"
        in: "path"
        description: "Mutex id"
        required: true
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      - in: "body"
        name: "mutexArg"
        required: true
        schema:
          $ref: "#/definitions/mutexArgs"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/mutex"
        400:
          description: "invaild request"
        401:
          description: "incorrect data"
      x-swagger-router-controller: "Default"
definitions:
  semaphoreLock:
    type: "object"
    required:
    - "id"
    - "seatTotal"
    - "seatVaild"
    properties:
      id:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      seatTotal:
        type: "integer"
        format: "int64"
      seatVaild:
        type: "integer"
        format: "int64"
      seat:
        type: "array"
        items:
          type: "object"
          required: 
          - "handle"
          - "expiry"
          properties:
            handle:
              type: "string"
              pattern: "^[a-zA-Z0-9\\-_]+$"
            expiry:
              type: "integer"
              format: "int64"
    example:
      id: "exampleKey"
      seatTotal: 35
      seatVaild: 30
      seat: {
        handle: "jkl49j-rfl39fev-3fdwff",
        expiry: 335689356
      }
  semaphoreSeat:
    type: "object"
    required:
    - "expiry"
    - "handle"
    - "id"
    properties:
      id:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      expiry:
        type: "integer"
        format: "int64"
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      id: "exampleKey"
      expiry: 19387654321
      handle: "wer123-dw24dffe-sdwqed23"
  semaLockargs:
    type: "object"
    required:
    - "seats"
    properties:
      seats:
        type: "integer"
        minimum: 1
    example:
      seats: 150
  semaSeatttl:
    type: "object"
    required:
    - "ttl"
    properties:
      ttl:
        type: "integer"
        minimum: 1
        maximum: 3600
    example:
      ttl: 45
  semaSeathandle:
    type: "object"
    required:
    - "handle"
    properties:
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      handle: "123jijl-efwef-fwref343"
  semaSeatargs:
    type: "object"
    required:
    - "handle"
    - "ttl"
    properties:
      ttl:
        type: "integer"
        minimum: 1
        maximum: 3600
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      ttl: 45
      handle: "123jijl-efwef-fwref343"
  mutex:
    type: "object"
    required:
    - "expiry"
    - "id"
    properties:
      id:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
      expiry:
        type: "integer"
        format: "int64"
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      id: "exampleKey"
      expiry: 135689027876
      handle: "afed12-dek32kdkl-w222jikj"
  mutexttl:
    type: "object"
    required:
    - "ttl"
    properties:
      ttl:
        type: "integer"
        minimum: 1
        maximum: 3600
    example:
      ttl: 45
  mutexHandle:
    type: "object"
    required:
    - "handle"
    properties:
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      handle: "123jijl-efwef-fwref343"
  mutexArgs:
    type: "object"
    required:
    - "handle"
    - "ttl"
    properties:
      ttl:
        type: "integer"
        minimum: 1
        maximum: 3600
      handle:
        type: "string"
        pattern: "^[a-zA-Z0-9\\-_]+$"
    example:
      ttl: 45
      handle: "123jijl-efwef-fwref343"
